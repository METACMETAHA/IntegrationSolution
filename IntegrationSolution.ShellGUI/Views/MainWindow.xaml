<Controls:MetroWindow x:Class="IntegrationSolution.ShellGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:views="clr-namespace:Integration.Infrastructure.Views;assembly=Integration.Infrastructure"
        xmlns:viewsChild="clr-namespace:Integration.ModuleGUI.Views;assembly=Integration.ModuleGUI"
        xmlns:VM="clr-namespace:Integration.ModuleGUI.ViewModels;assembly=Integration.ModuleGUI"
        xmlns:converters="clr-namespace:IntegrationSolution.Common.Converters;assembly=IntegrationSolution.Common"
        xmlns:prism="http://www.codeplex.com/prism"
        prism:ViewModelLocator.AutoWireViewModel="True"
        WindowStartupLocation="CenterScreen"
        TitleBarHeight="35" TryToBeFlickerFree="True"
        BorderThickness="0" GlowBrush="Black" 
        NonActiveWindowTitleBrush="LightGray"
        TitleCharacterCasing="Upper" 
        WindowTitleBrush="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
        NonActiveGlowBrush="Black" 
        NonActiveBorderBrush="Black"
        MinHeight="480" MinWidth="900"
        TitleAlignment="Center"
        Title="DTEK" Height="610" Width="1120">
    
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands ShowSeparators="True">
            <Controls:ToggleSwitch Width="160" VerticalAlignment="Center"
                                   Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                   Margin="5" IsChecked="{Binding IsConnectedNavigation}"
                                   FontSize="15" FontFamily="Candara Light"
                                   OffLabel="Нету связи" ThumbIndicatorWidth="20"
                                   OffSwitchBrush="#FFE8C9C9"
                                   OnSwitchBrush="#FF65BF65"
                                   OnLabel="Подключено"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands ShowSeparators="True">
            <Button Content="Настройки"
                    VerticalAlignment="Center" FontSize="14"
                    Command="{Binding ToggleFlyoutSettingsCommand}"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl prism:RegionManager.RegionName="FlyoutRegion">
            <Controls:FlyoutsControl.ItemContainerStyle>
                <Style TargetType="{x:Type Controls:Flyout}">
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                    <Setter Property="Position" Value="{Binding Position}" />
                    <Setter Property="IsModal" Value="{Binding IsModal}" />
                    <Setter Property="AreAnimationsEnabled" Value="True"/>
                    <Setter Property="Theme" Value="{Binding Theme}"/>
                    <Setter Property="CloseButtonVisibility" Value="{Binding CloseButtonVisibility}"/>
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                </Style>
            </Controls:FlyoutsControl.ItemContainerStyle>            
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    

    <Grid>

        <Grid.Resources>
            
            <converters:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter"/>

            <!--  this is the template for the items (options too)  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid x:Name="RootGrid"
                      Height="50"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}" Margin="-7 -10 0 0"
                                    Focusable="False" Height="50" Width="50" >
                        <ContentControl.RenderTransform>
                            <ScaleTransform ScaleY="0.8" ScaleX="0.8" />
                        </ContentControl.RenderTransform>
                    </ContentControl>
                    <TextBlock x:Name="textBind" Grid.Column="1" Margin="10 0"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=IsPaneOpen}" Value="False">
                        <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            
        </Grid.Resources>
        
        <Controls:HamburgerMenu
                           PaneForeground="{StaticResource ToolbarBg}"
                           DisplayMode="CompactInline"
                           IsPaneOpen="False"
                           ContentTransition="RightReplace"
                           ItemTemplate="{StaticResource MenuItemTemplate}"
                           ItemsSource="{Binding MenuItems}"
                           OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                           OptionsItemsSource="{Binding MenuOptionItems}"
                           SelectedIndex="1">

            <!--PaneBackground="{StaticResource Graident_Bg}"-->
            <Controls:HamburgerMenu.PaneBackground>
                <DrawingBrush>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing Brush="Transparent">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <PathGeometry Figures="M -150,230 C 130,290 400,300 400,405"/>
                                    <PathGeometry Figures="M 150,110 C 130,290 400,300 400,405"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Pen>
                                <Pen Thickness="3" Brush="{StaticResource Graident_Bg}"/>
                            </GeometryDrawing.Pen>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Controls:HamburgerMenu.PaneBackground>

            <!--  select the tag (ViewModel) of the selected item (options item)  -->
            <Controls:HamburgerMenu.Content>
                <MultiBinding Converter="{StaticResource SelectedItemToContentConverter}">
                    <Binding FallbackValue="{x:Null}"
                             Mode="OneWay"
                             Path="SelectedItem.Tag"
                             RelativeSource="{RelativeSource Self}" />
                    <Binding FallbackValue="{x:Null}"
                             Mode="OneWay"
                             Path="SelectedOptionsItem.Tag"
                             RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Controls:HamburgerMenu.Content>

        </Controls:HamburgerMenu>

    </Grid>

</Controls:MetroWindow>
