<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	
    <Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    <Style x:Key="SmallNavigationButton" TargetType="{x:Type Button}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Width="26" Height="23" CornerRadius="3" BorderThickness="1" Cursor="Hand" Background="#00000000">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Control_Bg_MO}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Control_Bg_Pressed}"/>
						</Trigger>	
							
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="border" Value="0.4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NavigationButton" TargetType="{x:Type Button}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Width="26" Height="23" CornerRadius="3" BorderThickness="1" Background="Transparent" Cursor="Hand">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Control_Bg_MO}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Control_Bg_Pressed}"/>
						</Trigger>	
							
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="border" Value="0.4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    <LinearGradientBrush x:Key="ButtonBg" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF354358" Offset="0.499"/>
		<GradientStop Color="#FF24334A" Offset="0.501"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonBgMO" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF374D6E" Offset="0.499"/>
		<GradientStop Color="#FF34445C" Offset="0.5"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonBgPressed" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF354358" Offset="0.499"/>
		<GradientStop Color="#FF1A283F" Offset="0.016"/>
	</LinearGradientBrush>
	
    <Style x:Key="BlueButton" TargetType="{x:Type Button}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderThickness="1" CornerRadius="5" BorderBrush="{DynamicResource Control_BorderBrush}" Background="{DynamicResource ButtonBg}" Height="25" >
						<ContentPresenter TextElement.Foreground="#ff8fa1bd" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonBgMO}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonBgPressed}"/>
						</Trigger>
						
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4" TargetName="border"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="SpecialBlueButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Height="25" Width="75">
                        <Path FlowDirection="LeftToRight" x:Name="shape" Data="M0.5,5.5 C0.5,2.7385763 2.7385763,0.5 5.5,0.5 L62.666667,0.5 C65.5,3.1666667 71.833333,9.8333333 74.5,12.833333 L74.5,12.833333 C67,20.833333 66.5,20.5 62.833333,24.5 L5.5,24.5 C2.7385763,24.5 0.5,22.261424 0.5,19.5 z" Fill="{DynamicResource ButtonBg}" Stretch="Fill" Stroke="{DynamicResource Control_BorderBrush}" />
                        <Border x:Name="border" BorderThickness="1" CornerRadius="5" Height="Auto" >
                            <ContentPresenter HorizontalAlignment="Center" TextElement.Foreground="#ff8fa1bd" TextElement.FontFamily="Arial" TextElement.FontSize="14" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="shape" Value="{DynamicResource ButtonBgMO}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="shape" Value="{DynamicResource ButtonBgPressed}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeBlueBtn" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Height="50" Width="140" CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.43"/>
                        </Border.Effect>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF0BA8B6" Offset="0"/>
                                <GradientStop Color="#FF2F97A0" Offset="1"/>
                                <GradientStop Color="#FF26ADB9" Offset="0.5"/>
                                <GradientStop Color="#FF27929C" Offset="0.513"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" TextElement.Foreground="White" TextElement.FontSize="15" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="15,0" TextAlignment="Center"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="border">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF19A0AD" Offset="0.004"/>
                                        <GradientStop Color="#FF238B94" Offset="1"/>
                                        <GradientStop Color="#FF26ADB9" Offset="0.5"/>
                                        <GradientStop Color="#FF27929C" Offset="0.513"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF1B9CA8" Offset="1"/>
                                        <GradientStop Color="#FF057983" Offset="0"/>
                                        <GradientStop Color="#FF30959D" Offset="0.5"/>
                                        <GradientStop Color="#FF117B85" Offset="0.487"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LargeRedBtn" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Height="62" Width="165" CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.43"/>
                        </Border.Effect>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF77979" Offset="0"/>
                                <GradientStop Color="#FFD55B5B" Offset="1"/>
                                <GradientStop Color="#FFF67878" Offset="0.5"/>
                                <GradientStop Color="#FFE76F6F" Offset="0.509"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" TextElement.Foreground="White" TextElement.FontSize="15" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="15,0"  TextAlignment="Center"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="border">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFBBBB" Offset="0"/>
                                        <GradientStop Color="#FFD55B5B" Offset="1"/>
                                        <GradientStop Color="#FFF67878" Offset="0.5"/>
                                        <GradientStop Color="#FFE76F6F" Offset="0.509"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF77979" Offset="1"/>
                                        <GradientStop Color="#FFD55B5B" Offset="0"/>
                                        <GradientStop Color="#FFF67878" Offset="0.509"/>
                                        <GradientStop Color="#FFE76F6F" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeGrayBtn" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Height="62" Width="165" CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.43"/>
                        </Border.Effect>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF6F6F6" Offset="0.004"/>
                                <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                <GradientStop Color="WhiteSmoke" Offset="0.5"/>
                                <GradientStop Color="LightGray" Offset="0.535"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" TextElement.Foreground="#2b2b2b" TextElement.FontSize="15" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="15,0"  TextAlignment="Center"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="border">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Gainsboro" Offset="0.004"/>
                                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                                        <GradientStop Color="#FFE2E0E0" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="0.504"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF6F6F6" Offset="0.996"/>
                                        <GradientStop Color="#FFD0D0D0"/>
                                        <GradientStop Color="WhiteSmoke" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="0.465"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="GrayButtonBg" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFE2E2E2" Offset="0.499"/>
		<GradientStop Color="#FFD4D4D4" Offset="0.508"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="GrayButtonBgMO" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFE4DBDB" Offset="0.499"/>
		<GradientStop Color="#FFBEBEBE" Offset="0.512"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="GrayButtonBgPressed" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#FFE4DBDB" Offset="0.499"/>
		<GradientStop Color="#FFBEBEBE" Offset="0.136"/>
	</LinearGradientBrush>


    <LinearGradientBrush x:Key="DarkGrayButtonBg" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF5c5c5c" Offset="0.499"/>
        <GradientStop Color="#FF484848" Offset="0.508"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MO_DarkGrayButtonBg" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF3a3a3a" Offset="0.499"/>
        <GradientStop Color="#FF292929" Offset="0.508"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Pressed_DarkGrayButtonBg" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF292929" Offset="0"/>
        <GradientStop Color="#FF3a3a3a" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="glow_gradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#00FFFFFF" Offset="0.65"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="dark_glow_gradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF000000" Offset="0"/>
        <GradientStop Color="#00000000" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="GrayButton" TargetType="{x:Type Button}">
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" Height="26" >
						<Border.Effect>
							<DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
						</Border.Effect>
						<ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
						</Trigger>
						
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4" TargetName="border"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="GrayButtonNOSIZE" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="4" BorderBrush="#FF313131" Background="{DynamicResource DarkGrayButtonBg}" Margin="3">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                        </Border.Effect>
                        <ContentPresenter TextElement.Foreground="#f1f1f1" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MO_DarkGrayButtonBg}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Pressed_DarkGrayButtonBg}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RibbonButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="Transparent">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="Transparent" Visibility="Hidden" Height="52" MinWidth="45">
                            <Border.Effect>
                                <DropShadowEffect  Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                            </Border.Effect>
                     </Border>
                        <ContentPresenter TextElement.Foreground="#ff686868" TextElement.FontFamily="Arial" TextElement.FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBg}"/>
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RibbonToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid" Background="Transparent">
                        <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="Transparent" Visibility="Hidden" Height="52" MinWidth="45">
                            <Border.Effect>
                                <DropShadowEffect  Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                            </Border.Effect>
                        </Border>
                        <ContentPresenter TextElement.Foreground="#ff686868" TextElement.FontFamily="Arial" TextElement.FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBg}"/>
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" CornerRadius="2">
                       <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         Margin="2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#ffd8e2f0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#ffd8e2f0"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButton_dark" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                         Margin="2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#ff3d5369"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#ff22384e"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--default button, exact same as GrayButton-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" Height="26" >
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                        </Border.Effect>
                        <ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NormalBtnNoSize" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" MinHeight="26" >
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                        </Border.Effect>
                        <ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="login_ok_btn_style" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="4" >
                        <Border CornerRadius="4" Height="34" MinWidth="80" Cursor="Hand">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.65" ShadowDepth="3"/>
                            </Border.Effect>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2EADB7" Offset="0"/>
                                    <GradientStop Color="#FF057983" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter TextElement.Foreground="White" TextElement.FontSize="14" TextElement.FontFamily="MyriadPro" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="login_cancel_btn_style" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="4" >
                        <Border CornerRadius="4" Height="34" MinWidth="80" Cursor="Hand">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.65" ShadowDepth="3"/>
                            </Border.Effect>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD6D6D6" Offset="0"/>
                                    <GradientStop Color="#FF9A9A9A" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter TextElement.Foreground="#ff464646" TextElement.FontSize="14" TextElement.FontFamily="MyriadPro" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--used for right side panel selection-->
    <Style x:Key="toggle_Main_Nav" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent" Height="75" Width="72" x:Name="grid" Cursor="Hand">
                        <Border x:Name="borderSel"  Margin="0" Width="70" Height="60" VerticalAlignment="Bottom" Visibility="Hidden" HorizontalAlignment="Center">
                        	<Border.Background>
                        		<LinearGradientBrush EndPoint="0.5,1.5" StartPoint="0.5,-0.5">
                        			<GradientStop Color="#00F1F1F1" Offset="0.38"/>
                        			<GradientStop Color="#FFF1F1F1" Offset="0.667"/>
                        		</LinearGradientBrush>
                        	</Border.Background>
                        </Border>
                        <Border x:Name="borderMO"  Margin="0" Width="70" Height="60" VerticalAlignment="Bottom" Visibility="Hidden" HorizontalAlignment="Center">
                        	<Border.Background>
                        		<LinearGradientBrush EndPoint="0.5,1.5" StartPoint="0.5,-0.5">
                        			<GradientStop Color="#00F1F1F1" Offset="0.38"/>
                        			<GradientStop Color="#FFF1F1F1" Offset="0.667"/>
                        		</LinearGradientBrush>
                        	</Border.Background>
                        </Border>
						 <Image Margin="0" Source="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" Stretch="None" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                    </Grid>
                        <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsMouseOver" Value="True">
                        	<Setter Property="Visibility" TargetName="borderMO" Value="Visible"/>
                        </Trigger>	
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                        	<Setter Property="Visibility" TargetName="borderSel" Value="Visible"/>
                        </Trigger>
                        
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid" Value="0.4"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<Style x:Key="GrayToggle" TargetType="{x:Type ToggleButton}">
       	<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" Height="26" >
						<Border.Effect>
							<DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
						</Border.Effect>
						<ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
						</Trigger>
						
						<Trigger Property="ToggleButton.IsChecked" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4" TargetName="border"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
    </Style>
    <Style x:Key="GrayToggle_NoSize" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" MinHeight="26" >
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                        </Border.Effect>
                        <ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconToggle_NoSize" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#00A5A5A5" Background="Transparent" MinHeight="22" >
                       <ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#e1edf6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFc8e2f5"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFc8e2f5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GrayToggleForGauges" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" Height="26" >
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                        </Border.Effect>
                        <ContentPresenter TextElement.Foreground="#353535" TextElement.FontFamily="Arial" TextElement.FontSize="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF3086C2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyleHMI" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="22" Height="22">
                        <Ellipse Stroke="#FF3D3D3D" StrokeThickness="2">
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF838383" Offset="0"/>
                                    <GradientStop Color="#FF292929" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse x:Name="ellipse" Stroke="#003D3D3D" StrokeThickness="2" Visibility="Hidden">
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDE8961" Offset="1"/>
                                    <GradientStop Color="#FF97451E" Offset="0.189"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF9A652" Offset="0.783"/>
                                        <GradientStop Color="#FFC06A00" Offset="0.102"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF9A652" Offset="0.783"/>
                                        <GradientStop Color="#FFC06A00" Offset="0.102"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBox_Dipswitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Height="22" Width="12" CornerRadius="2" Grid.ColumnSpan="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2D2749" Offset="0"/>
                                    <GradientStop Color="#FF4C6285" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Rectangle x:Name="rectangle" Stroke="#003D3D3D" StrokeThickness="0" Width="8" Height="8" Fill="#FFFFAF00" RadiusY="1" RadiusX="1" VerticalAlignment="Bottom" Margin="0,0,0,2"/>
                        </Border>
                        <TextBlock Margin="3,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Content}"  Grid.Column="1" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="VerticalAlignment" TargetName="rectangle" Value="Top"/>
                            <Setter Property="Margin" TargetName="rectangle" Value="0,2"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBox_Relay" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="open" Source="{DynamicResource relay_open}" Visibility="Hidden" Stretch="None"/>
                        <Image x:Name="closed" Source="{DynamicResource relay_closed}" Stretch="None"/>
                        <TextBlock Margin="3,0,0,0" TextWrapping="Wrap" Text="{TemplateBinding Content}"  Grid.Column="1" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="open" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="closed" Value="hidden"/>
                        </Trigger>
                       
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="grid" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter TextElement.FontFamily="Arial"  Margin="5,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" VerticalAlignment="Center"/>
                        <Border BorderBrush="#FF69748D" BorderThickness="1" Margin="0" Width="16" Height="16" CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.75,0.933" StartPoint="0.25,0.067">
                                    <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                    <GradientStop Color="White" Offset="0.544"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="border" BorderBrush="Black" Grid.ColumnSpan="1" Margin="0" Background="{x:Null}" Width="16" Height="16" Visibility="Hidden" FlowDirection="RightToLeft">
                            <Path FlowDirection="LeftToRight" Data="M3,7.25 L6.9057971,12.935606 12.625,3.125" Fill="{x:Null}" Margin="3,2.625,2.375,2.625" Stretch="Fill" Stroke="#FF04B617" StrokeThickness="2.5" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
                        </Border>
                        <Border x:Name="border1" BorderBrush="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" CornerRadius="2" Visibility="Hidden" Opacity="0.5">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.848,0.859" StartPoint="0.152,0.141">
                                    <GradientStop Color="#FFA1BDCC" Offset="0"/>
                                    <GradientStop Color="#FF9EA8F5" Offset="0.996"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsThreeState" Value="True">
                            <Setter Property="Visibility" TargetName="border1" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter
									Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter
									Property="Opacity" TargetName="grid" Value="0.4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter
									Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter
									Property="Opacity" TargetName="grid" Value="0.4"/>
                        </MultiTrigger>
                      
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="content" TextElement.Foreground="#ff2f2f2f" TextElement.FontSize="12" TextElement.FontFamily="Arial" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0,0,0" RecognizesAccessKey="True" Grid.Column="1" VerticalAlignment="Center"/>
                        <Ellipse Stroke="#FF69748D" Width="16" Height="16">
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.75,0.933" StartPoint="0.25,0.067">
                                    <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                    <GradientStop Color="White" Offset="0.544"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse x:Name="ellipse" Grid.ColumnSpan="1" Width="9" Height="9" Visibility="Hidden">
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F89B9" Offset="0"/>
                                    <GradientStop Color="#FF437793" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="TextElement.FontWeight" TargetName="content" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid"  Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpecialRadio" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="content" TextElement.Foreground="#ff2f2f2f" TextElement.FontSize="12" TextElement.FontFamily="Arial" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0,0,0" RecognizesAccessKey="True" Grid.Column="1" VerticalAlignment="Top"/>
                        <Ellipse Stroke="#FF69748D" Width="16" Height="16" VerticalAlignment="Top">
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.75,0.933" StartPoint="0.25,0.067">
                                    <GradientStop Color="#FFD8D8D8" Offset="0"/>
                                    <GradientStop Color="White" Offset="0.544"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse x:Name="ellipse" Grid.ColumnSpan="1" Width="9" Height="9" Visibility="Hidden" VerticalAlignment="Top" Margin="0,4,0,0">
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F89B9" Offset="0"/>
                                    <GradientStop Color="#FF437793" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="TextElement.FontWeight" TargetName="content" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid"  Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--hmi uc-->
    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFA5A5A5" Background="{DynamicResource GrayButtonBg}" Height="26" >
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="3"/>
                        </Border.Effect>
                        <Grid >
                            <ContentPresenter/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgMO}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GrayButtonBgPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" TargetName="border"/>
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Path=BarierOpened}"   Value="true">
                                <Setter Property="ToggleButton.IsChecked" TargetName="border" Value="true"/>
                                <Setter Property="Visibility" TargetName="image" Value="Collapsed"/>
                            </DataTrigger>-->
                    </ControlTemplate.Triggers>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    
    </Style>


  

  

</ResourceDictionary>