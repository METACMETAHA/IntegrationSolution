<UserControl x:Class="Integration.PartialViews.Views.GetTokenView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Integration.PartialViews.Views"
             xmlns:converter="clr-namespace:IntegrationSolution.Common.Converters;assembly=IntegrationSolution.Common"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Helpers="clr-namespace:IntegrationSolution.Common.Helpers;assembly=IntegrationSolution.Common"
             mc:Ignorable="d"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <converter:InverseBooleanConverter x:Key="boolConvert"/>
    </UserControl.Resources>

    <StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="68"/>
                <RowDefinition Height="68"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!--Row 1-->
            <RadioButton GroupName="TypeGetToken" Content="Получить токен" IsChecked="{Binding IsWithToken, Converter={StaticResource boolConvert}}"/>
            <RadioButton Grid.Column="1" Margin="10 0 0 0" GroupName="TypeGetToken" Content="У меня уже есть токен" IsChecked="{Binding IsWithToken}"/>

            <!--Row 2-->
            <!--<TextBox x:Name="login"
                 Grid.Row="1" Padding="4" Margin="0 7" 
                 Controls:TextBoxHelper.Watermark="Логин"
                 Controls:TextBoxHelper.IsWaitingForData="True"
                 Controls:TextBoxHelper.UseFloatingWatermark="True"
                 Controls:TextBoxHelper.ClearTextButton="True"
                 Text="{Binding TokenModel.Login, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding IsWithToken, Converter={StaticResource boolConvert}}"/>

            <PasswordBox x:Name="pwd"
                 Grid.Row="1" Grid.Column="1" Padding="4" Margin="10 7" 
                 Controls:TextBoxHelper.Watermark="Пароль"
                 Controls:TextBoxHelper.IsWaitingForData="True"
                 Controls:TextBoxHelper.UseFloatingWatermark="True"
                 Controls:TextBoxHelper.ClearTextButton="True"
                 Style="{StaticResource MetroButtonRevealedPasswordBox}"
                 Helpers:PasswordBoxHelper.BindPassword="True"
                 Helpers:PasswordBoxHelper.BoundPassword="{Binding TokenModel.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding IsWithToken, Converter={StaticResource boolConvert}}"/>-->

            <!--Row 3-->
            <TextBox x:Name="token"
                 Grid.Row="1" Grid.ColumnSpan="2" Padding="4" Margin="0 7 10 7" 
                 Controls:TextBoxHelper.Watermark="Токен"
                 Controls:TextBoxHelper.IsWaitingForData="True"
                 Controls:TextBoxHelper.UseFloatingWatermark="True"
                 Controls:TextBoxHelper.ClearTextButton="True"
                 Text="{Binding TokenModel, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding IsWithToken}"/>

            <!--Row 4-->
            <Button Grid.Row="2" Grid.ColumnSpan="2" Margin="10 10" 
                 HorizontalAlignment="Right" Padding="10 6" HorizontalContentAlignment="Center"
                 Content="Далее"
                 Command="{Binding UpdateTokenCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsWithToken}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=token, Path=Text}" Value=""/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>
    </StackPanel>
</UserControl>
